Screen1 As screen:
    LoadingSpinnerColor: =RGBA(0, 120, 212, 1)

    input As text:
        BorderColor: =RGBA(166, 166, 166, 1)
        BorderThickness: =2
        Color: =RGBA(51, 51, 51, 1)
        Default: ="Entrada de texto"
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        Format: =TextFormat.Number
        Height: =70
        HoverBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -30%)
        HoverColor: =RGBA(51, 51, 51, 1)
        HoverFill: =RGBA(255, 255, 255, 1)
        PressedBorderColor: =RGBA(0, 120, 212, 1)
        PressedColor: =RGBA(51, 51, 51, 1)
        PressedFill: =RGBA(255, 255, 255, 1)
        RadiusBottomLeft: =0
        RadiusBottomRight: =0
        RadiusTopLeft: =0
        RadiusTopRight: =0
        Size: =21
        Width: =560
        X: =28
        Y: =828
        ZIndex: =1

    Button5 As button:
        BorderColor: =RGBA(0, 0, 0, 0)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisabledFill: =RGBA(244, 244, 244, 1)
        Fill: =RGBA(0, 120, 212, 1)
        FocusedBorderColor: =ColorFade(Self.Fill, -75%)
        Font: =Font.'Segoe UI'
        FontWeight: =FontWeight.Semibold
        Height: =70
        HoverBorderColor: =RGBA(0, 0, 0, 0)
        HoverColor: =RGBA(255, 255, 255, 1)
        HoverFill: =ColorFade(RGBA(0, 120, 212, 1), -10%)
        OnSelect: |-
            =
            
            ClearCollect(cpfBase,Split(Left(input.Text,9),""));
            UpdateContext({varFirstDGInputed:Int(Mid(input.Text,10,1))});
            UpdateContext({varSecondDGInputed:Int(Right(input.Text,1))});
            
            UpdateContext({varSecondDGIsOk: false });
            UpdateContext({varFirstDGIsOk: false });
            
            UpdateContext({distinct_number:First(Len(Distinct(cpfBase,Result)))});
            
            If(distinct_number.Result=Int(First(cpfBase).Result),UpdateContext({varAllDigitsIsSame:true}), UpdateContext({varAllDigitsIsSame:false}));
            
            If(Not(varAllDigitsIsSame),
                // If(Not(varAllDigitsIsSame) TRUE;
                //RenameColumns(cpfBase;"Result";"digito");;
                UpdateContext({n_rows:CountRows(cpfBase)});
            
                // Gera cada digito do cpf do 1º ao 9º multiplicado por range de 10..2
                
                ClearCollect(prodCpfsByIndex, ForAll(Sequence(n_rows, n_rows, -1) As idx, Index(cpfBase, (n_rows+1)-idx.Value).Result*(idx.Value+1)));
                UpdateContext({varFirstDGCalculado:Mod(Sum(prodCpfsByIndex, Value)*10,11)});
                If(varFirstDGCalculado=10, UpdateContext({varFirstDGCalculado:0}));
                If(varFirstDGInputed=varFirstDGCalculado, UpdateContext({varFirstDGIsOk: true }), UpdateContext({varFirstDGIsOk: false }));
                If(varFirstDGIsOk, UpdateContext({varCpfValid:true}), UpdateContext({varCpfValid:false}));
            
                If(varFirstDGIsOk,
                    ClearCollect(cpfBase,Split(Left(input.Text,10),""));
                    UpdateContext({n_rows:CountRows(cpfBase)});
                    // Gera cada digito do cpf do 1º ao 9º multiplicado por range de 10..2
                    ClearCollect(prodCpfsByIndex,ForAll(Sequence(n_rows,n_rows,-1) As idx,Index(cpfBase,(n_rows+1)-idx.Value).Result*(idx.Value+1)));
                    UpdateContext({varSecondDGCalculado:Mod(Sum(prodCpfsByIndex, Value)*10, 11)});
                    If(varSecondDGCalculado=10,UpdateContext({varSecondDGCalculado:0}));
                    If(varSecondDGInputed=varSecondDGCalculado,UpdateContext({varSecondDGIsOk: true }),UpdateContext({varSecondDGIsOk: false }));
                    If(varSecondDGIsOk, UpdateContext({varCpfValid:true}), UpdateContext({varCpfValid:false}));
                );
            
            // If(Not(varAllDigitsIsSame) FALSE;
            UpdateContext({varCpfValid:false});
            
            )
        PressedBorderColor: =ColorFade(RGBA(0, 120, 212, 1), -50%)
        PressedColor: =RGBA(255, 255, 255, 1)
        PressedFill: =ColorFade(RGBA(0, 120, 212, 1), -30%)
        RadiusBottomLeft: =0
        RadiusBottomRight: =0
        RadiusTopLeft: =0
        RadiusTopRight: =0
        Size: =24
        Text: ="Botão"
        Width: =280
        X: =168
        Y: =1036
        ZIndex: =2

    Label7 As label:
        Align: =Align.Center
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.None
        BorderThickness: =2
        Color: =RGBA(51, 51, 51, 1)
        DisabledBorderColor: =RGBA(0, 0, 0, 0)
        DisabledColor: =RGBA(166, 166, 166, 1)
        Fill: =RGBA(203, 102, 102, 1)
        FocusedBorderThickness: =4
        Font: =Font.'Segoe UI'
        Height: =70
        Size: =21
        Text: |-
            =//Index(cpfBase;1).Result
            Concat(cpfBase,Result,",")
        Width: =560
        X: =28
        Y: =932
        ZIndex: =3

    DataTable1 As dataTable.datatable:
        BorderColor: =RGBA(0, 0, 0, 0)
        BorderStyle: =BorderStyle.Solid
        Color: =RGBA(51, 51, 51, 1)
        DisabledColor: =RGBA(166, 166, 166, 1)
        DisplayMode: =DisplayMode.Edit
        Fill: =RGBA(0, 0, 0, 0)
        Font: =Font.'Segoe UI'
        FontWeight: =FontWeight.Normal
        HeadingColor: =RGBA(255, 255, 255, 1)
        HeadingFill: =RGBA(0, 120, 212, 1)
        HeadingFont: =Font.'Segoe UI'
        HeadingFontWeight: =FontWeight.Normal
        HeadingSize: =21
        Height: =500
        HoverColor: =RGBA(255, 255, 255, 1)
        HoverFill: =RGBA(0, 120, 212, 1)
        InputFill: =RGBA(255, 255, 255, 1)
        InvertedColor: =RGBA(255, 255, 255, 1)
        Items: |-
            =//ClearCollect(cpfBase;Split(input.Text;""));;
            //RenameColumns(cpfBase;"Result";"digito");;
            ForAll(
                Sequence(CountRows(cpfBase),CountRows(cpfBase),-1) As idx,
                idx.Value
                //Index(cpfBase;idx.Value)
            )
        LinkColor: =RGBA(0, 134, 208, 1)
        PrimaryColor1: =RGBA(0, 120, 212, 1)
        PrimaryColor2: =ColorFade(RGBA(0, 120, 212, 1), -30%)
        PrimaryColor3: =ColorFade(RGBA(0, 120, 212, 1), -50%)
        SelectedColor: =RGBA(51, 51, 51, 1)
        SelectedFill: =RGBA(0, 120, 212, .2)
        Size: =21
        Width: =152
        X: =284
        Y: =260
        ZIndex: =4

        Value_Column1 As dataTableColumn.textualColumn:
            AutoWidth: =false
            DisplayMode: =DisplayMode.Edit
            FieldDisplayName: ="Value"
            FieldName: ="Value"
            FieldVariantName: ="textualColumn"
            Height: =460
            LayoutHeight: =Parent.Height
            Order: =1
            Text: =ThisItem.Value
            Width: =150
            X: =2
            Y: =136
            ZIndex: =1

